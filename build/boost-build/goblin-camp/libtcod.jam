# libtcod tool
#
# To configure:
#   using libtcod
#       : <include>path-to-includes <library>path-to-libraries
#         <debug-name>name-of-debug-library <release-name>name-of-release-library
#   ;
#
# NOTE: if you specify <debug-name>, you MUST specify <release-name> too!

import property-set ;
import project ;
import modules ;

rule init ( options * ) {
    modules.poke $(__name__) : .options : [ property-set.create $(options) ] ;
}

local rule create-project ( requirements * : usage-requirements * ) {
    # Common options
    if $(.options) {
        local inc = [ $(.options).get <include> ] ;
        local lib = [ $(.options).get <library> ] ;
        
        requirements       += <include>$(inc) <search>$(lib) ;
        usage-requirements += <include>$(inc) ;
    }
    
    project.push-current [ project.current ] ;
    project.initialize $(__name__) ;
    project $(__name__) : requirements $(requirements) : usage-requirements $(usage-requirements) ;
    
    define-targets ;
    
    project.pop-current ;
}

#################

rule use-project ( ) {
    create-project ;
}

local rule define-targets ( ) {
    local name-dbg = ;
    local name-rls = ;
    
    if $(.options) {
        name-dbg = [ $(.options).get <debug-name>   ] ;
        name-rls = [ $(.options).get <release-name> ] ;
    }
    
    if $(debug-name) && $(release-name) {
        lib libtcod : : <variant>release <name>$(release-name) ;
        lib libtcod : : <variant>debug   <name>$(debug-name) ;
    } else {
        lib libtcod : : <tag>@libtcod-tag ;
    }
}

rule libtcod-tag ( name : type ? : property-set ) {
    local toolset = [ $(property-set).get <toolset> ] ;
    local os      = [ $(property-set).get <os> ] ;
    local variant = [ $(property-set).get <variant> ] ;
    local prefix  = ;
    local suffix  = ;
    
    if $(os) = NT {
        if $(toolset) = mingw {
            suffix = -mingw ;
        } else if $(toolset) = msvc {
            suffix = -VS ;
            prefix = lib ;
        }
    } else {
        suffix = xx ;
    }
    
    if $(variant) = debug {
        suffix = $(suffix)-debug ;
    }
    
    if $(prefix) || $(suffix) {
        local name = $(prefix:E=)tcod$(suffix:E=) ;
        ECHO ** Using libtcod: $(name) ;
        return $(name) ;
    } else {
        ECHO ** Using libtcod ;
        return ;
    }
}
